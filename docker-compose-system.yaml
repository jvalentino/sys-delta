version: '3.8'
networks:
  cluster:
    driver: bridge

services:
  pgmaster:
    container_name: pgmaster-delta
    build:
      context: .
      dockerfile: config/postgres/Postgres.Dockerfile
    environment:
      PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
      NODE_ID: 1 # Integer number of node
      NODE_NAME: node1 # Node name
      CLUSTER_NODE_NETWORK_NAME: pgmaster # (default: hostname of the node)
      NODE_PRIORITY: 100  # (default: 100)
      SSH_ENABLE: 1
      #database we want to use for application
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: examplesys
      CLEAN_OVER_REWIND: 0
      CONFIGS: "listen_addresses:'*',max_replication_slots:5"
        # in format variable1:value1[,variable2:value2[,...]]
      # used for pgpool.conf file
      #defaults:
      CLUSTER_NAME: pg_cluster # default is pg_cluster
      REPLICATION_DB: replication_db # default is replication_db
      REPLICATION_USER: replication_user # default is replication_user
      REPLICATION_PASSWORD: replication_pass # default is replication_pass

    ports:
      - 5432:5432
    volumes:
      - ./prod-db/pgmaster:/var/lib/postgresql/data
    networks:
      cluster:
        aliases:
          - pgmaster

  pgslave1:
    container_name: pgslave1-delta
    build:
      context: .
      dockerfile: config/postgres/Postgres.Dockerfile
    environment:
      PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
      REPLICATION_PRIMARY_HOST: pgmaster
      NODE_ID: 2
      NODE_NAME: node2
      CLUSTER_NODE_NETWORK_NAME: pgslave1 # (default: hostname of the node)
      CLEAN_OVER_REWIND: 1
      CONFIGS: "max_replication_slots:10" #some overrides
    ports:
      - 5441:5432
    volumes:
      - ./prod-db/pgslave1:/var/lib/postgresql/data
    networks:
      cluster:
        aliases:
          - pgslave1

  pgslave2:
    container_name: pgslave2-delta
    build:
      context: .
      dockerfile: config/postgres/Postgres.Dockerfile
    environment:
      REPLICATION_PRIMARY_HOST: pgslave1 # I want to have cascade Streeming replication
      NODE_ID: 3
      NODE_NAME: node3
      CLUSTER_NODE_NETWORK_NAME: pgslave2 # (default: hostname of the node)
      #USE_REPLICATION_SLOTS: 0
    ports:
      - 5442:5432
    volumes:
      - ./prod-db/pgslave2:/var/lib/postgresql/data
    networks:
      cluster:
        aliases:
          - pgslave2

  pgslave3:
    container_name: pgslave3-delta
    build:
      context: .
      dockerfile: config/postgres/Postgres.Dockerfile
    environment:
      PARTNER_NODES: "pgmaster,pgslave1,pgslave3"
      REPLICATION_PRIMARY_HOST: pgmaster
      NODE_ID: 4
      NODE_NAME: node4
      CLUSTER_NODE_NETWORK_NAME: pgslave3 # (default: hostname of the node)
      NODE_PRIORITY: 200  # (default: 100)
      CLEAN_OVER_REWIND: 1
    ports:
      - 5443:5432
    volumes:
      - ./prod-db/pgslave3:/var/lib/postgresql/data
    networks:
      cluster:
        aliases:
          - pgslave3


  backup:
    container_name: backup-delta
    build:
      context: .
      dockerfile: config/postgres/Barman.Dockerfile
    environment:
      REPLICATION_USER: replication_user # default is replication_user
      REPLICATION_PASSWORD: replication_pass # default is replication_pass
      REPLICATION_HOST: pgmaster
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: examplesys
      SSH_ENABLE: 1
      BACKUP_SCHEDULE: "*/30 */5 * * *"
    volumes:
      - ./prod-db/backup:/var/backups
    networks:
      cluster:
        aliases:
          - backup

